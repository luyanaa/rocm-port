diff --git a/src/core/runtime/amd_gpu_agent.cpp b/src/core/runtime/amd_gpu_agent.cpp
index f5d276f..75becde 100644
--- a/src/core/runtime/amd_gpu_agent.cpp
+++ b/src/core/runtime/amd_gpu_agent.cpp
@@ -1291,12 +1291,12 @@ hsa_status_t GpuAgent::GetInfo(hsa_agent_info_t attribute, void* value) const {
       if (core::hsa_internal_api_table_.image_api.hsa_ext_image_create_fn != NULL) {
         setFlag(HSA_EXTENSION_IMAGES);
       }
-
+#if 0
       if (os::LibHandle lib = os::LoadLib(kAqlProfileLib)) {
         os::CloseLib(lib);
         setFlag(HSA_EXTENSION_AMD_AQLPROFILE);
       }
-
+#endif
       setFlag(HSA_EXTENSION_AMD_PROFILER);
 
       break;
@@ -2117,7 +2117,7 @@ void GpuAgent::InitNumaAllocator() {
     if (pool->kernarg()) {
       system_allocator_ = [pool](size_t size, size_t alignment,
                                  MemoryRegion::AllocateFlags alloc_flags) -> void* {
-        assert(alignment <= 4096);
+        // assert(alignment <= 4096);
         void* ptr = nullptr;
         return (HSA_STATUS_SUCCESS ==
                 core::Runtime::runtime_singleton_->AllocateMemory(pool, size, alloc_flags, &ptr))
diff --git a/src/inc/hsa.h b/src/inc/hsa.h
index bd0ee1e..4bc1d16 100644
--- a/src/inc/hsa.h
+++ b/src/inc/hsa.h
@@ -73,14 +73,14 @@
 
 // Detect and set large model builds.
 #undef HSA_LARGE_MODEL
-#if defined(__LP64__) || defined(_M_X64)
+#if defined(__LP64__) || defined(_M_X64) || defined(__loongarch_lp64) || defined(__riscv)
 #define HSA_LARGE_MODEL
 #endif
 
 // Try to detect CPU endianness
 #if !defined(LITTLEENDIAN_CPU) && !defined(BIGENDIAN_CPU)
 #if defined(__i386__) || defined(__x86_64__) || defined(_M_IX86) || \
-    defined(_M_X64)
+    defined(_M_X64) || defined(__loongarch_lp64) || defined(__riscv)
 #define LITTLEENDIAN_CPU
 #endif
 #endif
