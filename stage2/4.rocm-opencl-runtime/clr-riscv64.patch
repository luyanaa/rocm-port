diff --git a/hipamd/src/hip_embed_pch.sh b/hipamd/src/hip_embed_pch.sh
index 0a1572b2d..8ae83d7b5 100755
--- a/hipamd/src/hip_embed_pch.sh
+++ b/hipamd/src/hip_embed_pch.sh
@@ -140,14 +140,14 @@ EOF
 
   cat $tmp/hip_macros.h >> $tmp/pch_wave32.cui &&
 
-  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple x86_64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave32.pch -x hip-cpp-output - <$tmp/pch_wave32.cui &&
+  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple riscv64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave32.pch -x hip-cpp-output - <$tmp/pch_wave32.cui &&
 
   # For other devices
   $LLVM_DIR/bin/clang -O3 --rocm-path=$HIP_INC_DIR/.. -std=c++17 -nogpulib -isystem $HIP_INC_DIR -isystem $HIP_BUILD_INC_DIR -isystem $HIP_AMD_INC_DIR --cuda-device-only -x hip $tmp/hip_pch.h -E >$tmp/pch_wave64.cui &&
 
   cat $tmp/hip_macros.h >> $tmp/pch_wave64.cui &&
 
-  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple x86_64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave64.pch -x hip-cpp-output - <$tmp/pch_wave64.cui &&
+  $LLVM_DIR/bin/clang -cc1 -O3 -emit-pch -triple amdgcn-amd-amdhsa -aux-triple riscv64-unknown-linux-gnu -fcuda-is-device -std=c++17 -fgnuc-version=4.2.1 -o $tmp/hip_wave64.pch -x hip-cpp-output - <$tmp/pch_wave64.cui &&
 
   $LLVM_DIR/bin/llvm-mc -o hip_pch.o $tmp/hip_pch.mcin --filetype=obj &&
 
diff --git a/rocclr/device/rocm/rocvirtual.cpp b/rocclr/device/rocm/rocvirtual.cpp
index ed4649998..a96d8bcf0 100644
--- a/rocclr/device/rocm/rocvirtual.cpp
+++ b/rocclr/device/rocm/rocvirtual.cpp
@@ -43,8 +43,9 @@
 #include <string>
 #include <thread>
 #include <vector>
+#if defined(__x86_64__)
 #include <immintrin.h>
-
+#endif
 
 /**
 * HSA image object size in bytes (see HSAIL spec)
@@ -2789,7 +2790,6 @@ bool VirtualGPU::createVirtualQueue(uint deviceQueueSize)
 
   return true;
 }
-
 // ================================================================================================
 __attribute__((optimize("unroll-all-loops"), always_inline))
 static inline void nontemporalMemcpy(void* __restrict dst, const void* __restrict src,
@@ -2809,7 +2809,7 @@ static inline void nontemporalMemcpy(void* __restrict dst, const void* __restric
     }
     size = size % sizeof(__m256i);
   #endif
-
+  #if !defined(__riscv)
   for (auto i = 0u; i != size / sizeof(__m128i); ++i) {
     _mm_stream_si128(reinterpret_cast<__m128i* __restrict&>(dst)++,
                      *(reinterpret_cast<const __m128i* __restrict&>(src)++));
@@ -2826,6 +2826,9 @@ static inline void nontemporalMemcpy(void* __restrict dst, const void* __restric
     _mm_stream_si32(reinterpret_cast<int* __restrict&>(dst)++,
                     *reinterpret_cast<const int* __restrict&>(src)++);
   }
+  #else
+   amd::Os::fastMemcpy(dst, src, size);
+  #endif
 }
 
 // ================================================================================================
diff --git a/rocclr/os/os_posix.cpp b/rocclr/os/os_posix.cpp
index e48a4bcfc..d733b15bf 100644
--- a/rocclr/os/os_posix.cpp
+++ b/rocclr/os/os_posix.cpp
@@ -307,8 +307,10 @@ void Os::currentStackInfo(address* base, size_t* size) {
 
   ::pthread_attr_destroy(&threadAttr);
 
+#if !defined(__riscv)
   assert(Os::currentStackPtr() >= *base - *size && Os::currentStackPtr() < *base &&
          "just checking");
+#endif
 }
 
 void Os::setCurrentThreadName(const char* name) { ::prctl(PR_SET_NAME, name); }
